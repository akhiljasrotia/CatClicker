{"ast":null,"code":"var _jsxFileName = \"/Users/akhiljasrotia/Desktop/CatClicker/src/CatForm.js\";\nimport React from 'react';\nimport { Button, Badge } from 'react-bootstrap';\nimport './CatForm.css';\n\nclass CatForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (event, type) => {\n      console.log(type, event.target.value);\n\n      if (type == 'name') {\n        this.setState({\n          currentName: event.target.value\n        });\n      }\n\n      if (type == 'url') {\n        this.setState({\n          currentUrl: event.target.value\n        });\n      }\n\n      if (type == 'click') {\n        this.setState({\n          currentCounter: event.target.value\n        });\n      }\n    };\n\n    this.saveChanges = e => {\n      if (this.state.currentName != this.props.data.name) {\n        this.props.createANewCat(this.state.currentName, parseInt(this.state.currentCounter), this.state.currentUrl);\n      } else if (this.state.currentCounter != this.props.data.counter || this.state.currentUrl != this.props.data.url) {\n        this.props.changeUrlAndCounter(parseInt(this.state.currentCounter), this.state.currentUrl);\n      } else {\n        return;\n      }\n    };\n\n    this.state = {\n      currentUrl: this.props.data.url,\n      currentCounter: this.props.data.counter,\n      currentName: this.props.data.name\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(prevState, prevProps.data);\n    this.setState({\n      currentUrl: prevProps.data.url,\n      currentCounter: prevProps.data.counter,\n      currentName: prevProps.data.name\n    });\n  } // static getDerivedStateFromProps(nextProps, prevState) {\n  //   if(nextProps.data !== prevState.data ) {\t\n  //     return {\n  // currentUrl: nextProps.data.url,\n  // currentCounter: nextProps.data.counter,\n  // currentName: nextProps.data.name\n  // \t};\n  //   }\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"CatForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"labels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Cat Name\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.currentName,\n      onChange: e => this.handleChange(e, 'name'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"labels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Cat Image\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.currentUrl,\n      onChange: e => this.handleChange(e, 'url'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"labels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Cat Clicks\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.currentCounter,\n      onChange: e => this.handleChange(e, 'click'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"success\",\n      onClick: this.saveChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Save\"), React.createElement(Button, {\n      variant: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Undo\")));\n  }\n\n}\n\nexport default CatForm;","map":{"version":3,"sources":["/Users/akhiljasrotia/Desktop/CatClicker/src/CatForm.js"],"names":["React","Button","Badge","CatForm","Component","constructor","props","handleChange","event","type","console","log","target","value","setState","currentName","currentUrl","currentCounter","saveChanges","e","state","data","name","createANewCat","parseInt","counter","url","changeUrlAndCounter","componentDidUpdate","prevProps","prevState","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Button,Badge} from 'react-bootstrap';\nimport './CatForm.css';\n\nclass CatForm extends React.Component{\n\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state={\n\t\t\tcurrentUrl:this.props.data.url,\n\t\t\tcurrentCounter:this.props.data.counter,\n\t\t\tcurrentName:this.props.data.name,\n\t\t}\n\n\t}\n\n\thandleChange = (event, type) => {\n\t\tconsole.log(type, event.target.value)\n\t\tif(type == 'name') {\n\t\t\tthis.setState({currentName: event.target.value});\n\t\t}\n\t\tif(type == 'url') {\n\t\t\tthis.setState({currentUrl: event.target.value});\n\t\t}\n\t\tif(type == 'click') {\n\t\t\tthis.setState({currentCounter: event.target.value});\n\t\t}\n\t}\n\n\tsaveChanges = (e) => {\n\t\tif(this.state.currentName != this.props.data.name) {\n\t\t\tthis.props.createANewCat(this.state.currentName, parseInt(this.state.currentCounter), this.state.currentUrl);\n\t\t}\n\t\telse if((this.state.currentCounter != this.props.data.counter) || (this.state.currentUrl != this.props.data.url)) {\n\t\t\tthis.props.changeUrlAndCounter(parseInt(this.state.currentCounter), this.state.currentUrl);\n\t\t}\n\t\telse {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tconsole.log(prevState, prevProps.data)\n\t\tthis.setState({\n\t\t\tcurrentUrl: prevProps.data.url,\n\t\t\tcurrentCounter: prevProps.data.counter,\n\t\t\tcurrentName: prevProps.data.name\t\t\n\t\t})\n\t}\n\n\t// static getDerivedStateFromProps(nextProps, prevState) {\n\t//   if(nextProps.data !== prevState.data ) {\t\n\t//     return {\n\t\t\t// currentUrl: nextProps.data.url,\n\t\t\t// currentCounter: nextProps.data.counter,\n\t\t\t// currentName: nextProps.data.name\n\t// \t};\n\t//   }\n\t// }\n\n\trender(){\n\treturn(\n\t\t\t<div className=\"CatForm\">\n\t          <form className=\"form\">\n\t            <label className=\"labels\">\n\t              Cat Name \n\t              <input type=\"text\" value={this.state.currentName} onChange={(e) => this.handleChange(e, 'name')}/>\n\t            </label>\n\t            <br/>\n\t            <label className=\"labels\">\n\t              Cat Image\t\n\t              <input type=\"text\" value={this.state.currentUrl} onChange={(e) => this.handleChange(e, 'url')}/>\n\t            </label>\n\t            <br/>\n\t            <label className=\"labels\">\n\t              Cat Clicks\n\t              <input type=\"text\" value={this.state.currentCounter} onChange={(e) => this.handleChange(e, 'click')}/>\n\t            </label>\n\t            <br/>\n\t            <Button variant='success' onClick={this.saveChanges}>Save</Button>\n\t            <Button variant='danger'>Undo</Button>\n\t          </form>\n        \t</div>\n\t\t);\n}\n}\n\nexport default CatForm;"]},"metadata":{},"sourceType":"module"}